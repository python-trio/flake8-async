---
+++
@@ x,8 x,9 @@

 # fmt: off
 async def foo_no_noqa():
-    with trio.fail_after(5):  # ASYNC100: 9, 'trio', 'fail_after'
-        yield  # ASYNC911: 8, "yield", Statement("function definition", lineno-2)
+    await trio.lowlevel.checkpoint()
+    # ASYNC100: 9, 'trio', 'fail_after'
+    yield  # ASYNC911: 8, "yield", Statement("function definition", lineno-2)
     await trio.lowlevel.checkpoint()


@@ x,13 x,14 @@

 async def foo_noqa_100():
     with trio.fail_after(5):  # noqa: ASYNC100
+        await trio.lowlevel.checkpoint()
         yield  # ASYNC911: 8, "yield", Statement("function definition", lineno-2)
     await trio.lowlevel.checkpoint()


 async def foo_noqa_911():
-    with trio.fail_after(5):  # ASYNC100: 9, 'trio', 'fail_after'
-        yield  # noqa: ASYNC911
+    # ASYNC100: 9, 'trio', 'fail_after'
+    yield  # noqa: ASYNC911
     await trio.lowlevel.checkpoint()


@@ x,8 x,8 @@
 # check that noqas work after line numbers have been modified in a different visitor

 # this will remove one line
-with trio.fail_after(5):  # ASYNC100: 5, 'trio', 'fail_after'
-    ...
+# ASYNC100: 5, 'trio', 'fail_after'
+...


 async def foo_changed_lineno():
@@ x,7 x,9 @@

 # this will add two lines
 async def foo_changing_lineno():  # ASYNC911: 0, "exit", Statement("yield", lineno+1)
+    await trio.lowlevel.checkpoint()
     yield  # ASYNC911: 4, "yield", Statement("function definition", lineno-1)
+    await trio.lowlevel.checkpoint()


 with trio.fail_after(5):  # noqa: ASYNC100
