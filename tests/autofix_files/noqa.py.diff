---
+++
@@ x,9 x,10 @@

 # fmt: off
 async def foo_no_noqa():
-    with trio.fail_after(5):  # ASYNC100: 9, 'trio', 'fail_after'
-        if foo():
-            return  # ASYNC910: 12, "return", Statement("function definition", lineno-3)
+    # ASYNC100: 9, 'trio', 'fail_after'
+    if foo():
+        await trio.lowlevel.checkpoint()
+        return  # ASYNC910: 12, "return", Statement("function definition", lineno-3)
     await trio.lowlevel.checkpoint()


@@ x,14 x,15 @@
 async def foo_noqa_100():
     with trio.fail_after(5):  # noqa: ASYNC100
         if foo():
+            await trio.lowlevel.checkpoint()
             return  # ASYNC910: 12, "return", Statement("function definition", lineno-3)
     await trio.lowlevel.checkpoint()


 async def foo_noqa_911():
-    with trio.fail_after(5):  # ASYNC100: 9, 'trio', 'fail_after'
-        if foo():
-            return  # noqa: ASYNC910
+    # ASYNC100: 9, 'trio', 'fail_after'
+    if foo():
+        return  # noqa: ASYNC910
     await trio.lowlevel.checkpoint()


@@ x,8 x,8 @@
 # check that noqas work after line numbers have been modified in a different visitor

 # this will remove one line
-with trio.fail_after(5):  # ASYNC100: 5, 'trio', 'fail_after'
-    ...
+# ASYNC100: 5, 'trio', 'fail_after'
+...


 async def foo_changed_lineno():
@@ x,7 x,9 @@

 # this will add two lines
 async def foo_changing_lineno():  # ASYNC911: 0, "exit", Statement("yield", lineno+1)
+    await trio.lowlevel.checkpoint()
     yield  # ASYNC911: 4, "yield", Statement("function definition", lineno-1)
+    await trio.lowlevel.checkpoint()


 with trio.fail_after(5):  # noqa: ASYNC100
